plugins {
    id 'fabric-loom' version '1.5-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

loom {
    accessWidenerPath.set(file("src/main/resources/exporter.accesswidener"))
}

repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.
    maven {
        name = 'Fabric'
        url = 'https://maven.fabricmc.net/'
    }
    maven {
        name = 'ParchmentMC'
        url = 'https://maven.parchmentmc.org'
    }

    maven { url = "https://mvn.devos.one/snapshots/" } // Registrate, Forge Tags, Milk Lib
    maven { url = "https://mvn.devos.one/releases/" } // Porting Lib
    maven { // for Porting Lib: Mixin Extras, Fabric ASM
        url = "https://jitpack.io/"
        content { includeGroupAndSubgroups("com.github") }
    }
    maven { url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/" } // Forge Config API Port
    maven { url = "https://maven.tterrag.com/" } // Flywheel
    maven { url = "https://maven.shedaniel.me/" } // REI and deps
    maven { url = "https://api.modrinth.com/maven" } // LazyDFU, Sodium, Sandwichable
    maven { url = "https://maven.terraformersmc.com/" } // Mod Menu, Trinkets
    maven { url = "https://squiddev.cc/maven" } // CC:T
    maven { url = "https://modmaven.dev" } // Botania
    maven { // Reach Entity Attributes
        url = "https://maven.jamieswhiteshirt.com/libs-release"
        content { includeGroup("com.jamieswhiteshirt") }
    }
    maven { url = "https://maven.ladysnake.org/releases" } // CCA, for Trinkets
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-1.20.1:2023.09.03@zip")
    }
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modCompileOnly "com.simibubi.create:create-fabric-${project.minecraft_version}:${project.create_version}"

    implementation("de.javagl:jgltf-model-builder:2.0.3") {
        exclude(group: 'com.fasterxml.jackson.core')
    }
    implementation("com.fasterxml.jackson.core:jackson-databind:2.17.0")

    include("de.javagl:jgltf-impl-v1:2.0.3")
    include("de.javagl:jgltf-impl-v2:2.0.3")
    include("de.javagl:jgltf-model:2.0.3")
    include("de.javagl:jgltf-model-builder:2.0.3")
    include("com.fasterxml.jackson.core:jackson-annotations:2.17.0")
    include("com.fasterxml.jackson.core:jackson-core:2.17.0")
    include("com.fasterxml.jackson.core:jackson-databind:2.17.0")

}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release.set(targetJavaVersion)
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
